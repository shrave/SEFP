What you learnt inside the class?

Week1

#1 Learnt that quality plays an important role in software development.
#2 Many people can get different and creative ideas on the same topic.
#3 How the same app/product can be used for and in several different ways.
#4 Learnt about the Kano model.

Week 2
#1 Software has many attributes and qualities associated to it.
#2 Each person's expectations with software are different.
#3 Since there is no hardware/physical material in software as such, it is expected to be easily changed and to be absolutely well.

Week 3
#1 There is a big difference between a proffessional and a normal worker.A proffessional knows why something is being done and how to modify itbut a worker only knows how to do it.
#2 A majority of people are producing only software. Only a handful are producing quality software. The software of those handful people makes the difference.
#3 In order to produce a quality product, you have to follow a process.
#4 Every employee of a company may it be an analyst, a coder or a business manager has varied perceptions and models about the software which is being developed. No one knows how it will be modeled until it is released.
#5 It is an engineering discipline as it involves modeling, prototyping and designing of products.

Week 4
#1 Software life cycle is being compared to human life cycle.Human life and software life cycle is different.You cannot control human life cycle whereas you are the designer and controller of software.
#2 Life cycles have many aspects to it like actors, processes and so on.
#3 There are different types of life cycles such as the waterfall model,scrum etc.
#4 Life cycles may be either traditional or agile. Traditional models involve proper planning followed by implementation of the model.Waterfall model is a classic example of life cycles and comes under the traditional type of life cycle.
#5 Agile models include planning and early release of a version for testing and then subsequent models are planned and developed based on the feedback.
#6 Requirements can never be fully listed down or properly explained. It needs a person with a technical background and expertise to understand requirements properly in the technical world and the customer world.
#7 It requires a lot of skill to interact with a customer being a representative of a software firm. The main problems with a customer is that he/she doesn't understand his/her needs until we show it to them.
#8 Customers cannot directly suggest features  because they cannot imagine the project. So, giving them an idea of the prototype is essential.
#9 Boeing has 1.20 lakh lines of requirements!
#10 To properly talk and have a uniform language among the stakeholders(investors,users,developers) of a company, a proper language(use cases,UML,etc) has to be formulated which can easily communicate the prototype of the project.
