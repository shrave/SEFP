What you learnt inside the class?

Week1

#1 Learnt that quality plays an important role in software development.
#2 Many people can get different and creative ideas on the same topic.
#3 How the same app/product can be used for and in several different ways.
#4 Learnt about the Kano model.

Week 2
#1 Software has many attributes and qualities associated to it.
#2 Each person's expectations with software are different.
#3 Since there is no hardware/physical material in software as such, it is expected to be easily changed and to be absolutely well.

Week 3
#1 There is a big difference between a proffessional and a normal worker.A proffessional knows why something is being done and how to modify itbut a worker only knows how to do it.
#2 A majority of people are producing only software. Only a handful are producing quality software. The software of those handful people makes the difference.
#3 In order to produce a quality product, you have to follow a process.
#4 Every employee of a company may it be an analyst, a coder or a business manager has varied perceptions and models about the software which is being developed. No one knows how it will be modeled until it is released.
#5 It is an engineering discipline as it involves modeling, prototyping and designing of products.

Week 4
#1 Software life cycle is being compared to human life cycle.Human life and software life cycle is different.You cannot control human life cycle whereas you are the designer and controller of software.
#2 Life cycles have many aspects to it like actors, processes and so on.
#3 There are different types of life cycles such as the waterfall model,scrum etc.
#4 Life cycles may be either traditional or agile. Traditional models involve proper planning followed by implementation of the model.Waterfall model is a classic example of life cycles and comes under the traditional type of life cycle.
#5 Agile models include planning and early release of a version for testing and then subsequent models are planned and developed based on the feedback.
#6 Requirements can never be fully listed down or properly explained. It needs a person with a technical background and expertise to understand requirements properly in the technical world and the customer world.
#7 It requires a lot of skill to interact with a customer being a representative of a software firm. The main problems with a customer is that he/she doesn't understand his/her needs until we show it to them.
#8 Customers cannot directly suggest features  because they cannot imagine the project. So, giving them an idea of the prototype is essential.
#9 Boeing has 1.20 lakh lines of requirements!
#10 To properly talk and have a uniform language among the stakeholders(investors,users,developers) of a company, a proper language(use cases,UML,etc) has to be formulated which can easily communicate the prototype of the project.

Week 5
#1 The trend is shifting from traditional models to agile models.Agile models don't mean that traditional processes are not being followed.It only means that the drawbacks of traditional models like getting stuck at the documentation phase, not being able to adapt to newer technologies is being overcomed by iterating over the waterfall model many a times.
#2 There is a high amount of risk involved with agile life cycles.But there is high-value being delivered in the end.
#3 No model is perfect and for us to choose a model, we have to keep in mind the various factors,influences related to our project and make the tradeoffs.
#4 In pair programming, a member of the group only codes and the other member thinks and reviews the code.Then, they change roles.
#5 In an incremental model, modules are designed, developed and tested in an incremental fashion.
#6 There are numerous reasons why a software project can fail, we cannot predict its success.
#7 In the scrum(agile) model, each day, members of a team have a group meeting in the morning discussing the tasks that would be finished by them during that day. It is about dividing a project into smaller blocks which can be completed in a day's/a few hours time.This process is done for 30 days to deliver the product.
#8 Whether or not a project requires a project manager or not depends on many factors like the size, complexity of the project and so on. But as software developers, we must know how to manage projects.This is done by Software estimation, scheduling and tracking.
#9 No two software projects can be the same.
#10 Software quality comes with tradeoffs. Outside code(reused code) affects the quality of the software.
#11 Estimates must be done iteratively and also effort estimation for each task is important.
#12 WBS(Work Breakdown Structure) for every task must be defined.
#13 A project can be estimated based on the lines of code(LOC), function points, feature points or a combination of these or none of them.LOC is a popular metric but not often the most accurate one.

Week 7
#1 UI/UX design is as important as the backend functionality of the software.
#2 A person who designs/tests the usability of interfaces is known as a Usability engineer.
#3 A perfect design is a combination of value and experience.
#4 Some ways in which we can ensure a better UI is assuming the user base through personas, making it simple and convienient for the user to use the software, converting error messages into users' terminology, making the elements of the UI intuitive.
#5 A particular desgin that is prevalant in the industry and has become a standard for certain interfaces is known as a metaphor.
